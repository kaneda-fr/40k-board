{
  "swagger": "2.0",
  "info": {
    "description": "API for 40k ranking",
    "version": "0.1.1",
    "title": "40k API"
  },
  "host": "hackedo.io",
  "basePath": "/40k/api",
  "schemes": [
    "https",
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "FBApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-FB-API-Key"
    }
  },
  "paths": {
    "/classement": {
      "get": {
        "summary": "retourne le classement",
        "description": "return the ranking board",
        "operationId": "classementGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date du classement",
            "required": false,
            "type": "string",
            "format": "date-string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of players by ranking order",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/joueur"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      },
      "put": {
        "summary": "calcule le classement",
        "description": "calcule le classement",
        "operationId": "classementPUT",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "Return operation message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      }
    },
    "/joueur/{nom}": {
      "get": {
        "summary": "retourne un joueur",
        "description": "retourne un joueur par id",
        "operationId": "joueurNomGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "description": "nom du joueur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "show one player",
            "schema": {
              "$ref": "#/definitions/joueur"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      },
      "put": {
        "summary": "met a jour un joueur",
        "description": "Enregistre ou met à jour un joueur",
        "operationId": "joueurPUT",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "description": "nom du joueur",
            "required": true,
            "type": "string"
          },
          {
            "name": "joueur",
            "in": "body",
            "description": "details du joueur",
            "required": true,
            "schema": {
              "$ref": "#/definitions/joueur"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "show one player",
            "schema": {
              "$ref": "#/definitions/joueur"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      },
      "delete": {
        "summary": "supprime un joueur",
        "description": "Enregistre ou met à jour un joueur",
        "operationId": "joueurDEL",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "description": "nom du joueur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion ok"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      }
    },
    "/joueurs": {
      "get": {
        "summary": "retourne la liste des joueurs",
        "description": "retourne la liste des joueurs",
        "operationId": "joueursGET",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "show all player",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      }
    },
    "/joueurfb/{userid}": {
      "get": {
        "summary": "retourne un joueur",
        "description": "retourne la liste des joueurs par fb userid",
        "operationId": "joueurFBGET",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "userid FB du joueur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "show one player",
            "schema": {
              "$ref": "#/definitions/joueur"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      }
    },
    "/match": {
      "get": {
        "summary": "retourne la liste des matchs",
        "description": "retourne la liste de tous les matchs",
        "operationId": "matchGET",
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "liste des matchs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/match"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      },
      "put": {
        "summary": "enregistre un match",
        "description": "enregistre un match",
        "operationId": "matchPUT",
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "match",
            "in": "body",
            "description": "details de la partie",
            "required": true,
            "schema": {
              "$ref": "#/definitions/match"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retourne le match",
            "schema": {
              "$ref": "#/definitions/match"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      }
    },
    "/match/{id}": {
      "get": {
        "summary": "retourne un match par id",
        "description": "retourne un match",
        "operationId": "matchIdGET",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la partie",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "list des matchs",
            "schema": {
              "$ref": "#/definitions/match"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      },
      "put": {
        "summary": "met a jour un match",
        "description": "met a jour les données d'un match",
        "operationId": "matchIdPUT",
        "security": [
          {
            "FBApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la partie",
            "required": true,
            "type": "string"
          },
          {
            "name": "match",
            "in": "body",
            "description": "details de la partie",
            "required": true,
            "schema": {
              "$ref": "#/definitions/match"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retourne le match",
            "schema": {
              "$ref": "#/definitions/match"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      }
    },
    "/matchJoueur/{nom}": {
      "get": {
        "summary": "retourne la liste des matchs d'un joueur",
        "description": "Liste de match joués par un joueur",
        "operationId": "matchJoueurNomGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nom",
            "in": "path",
            "description": "nom du joueur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "liste des match",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/match"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "40k"
      }
    }
  },
  "definitions": {
    "joueur": {
      "type": "object",
      "properties": {
        "nom": {
          "type": "string",
          "description": "Nom du Joueur"
        },
        "armee": {
          "type": "string",
          "description": "Armee principale du joueur"
        },
        "classement": {
          "type": "integer",
          "description": "classement du joueur"
        },
        "parties": {
          "type": "integer",
          "description": "nombre de parties disputees"
        },
        "fbuserid": {
          "type": "string",
          "description": "userID facebook"
        },
        "admin": {
          "type": "boolean",
          "description": "indique si le joueur est admin",
          "default": false
        },
        "actif": {
          "type": "boolean",
          "description": "indique si le compte est actif",
          "default": false
        },
        "datecreation": {
          "type": "string",
          "format": "date-time",
          "description": "date de creation du joueur"
        },
        "points": {
          "type": "integer",
          "description": "Nombre de  points joues"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Adresse mail du joueur"
        },
        "fbname": {
          "type": "string",
          "description": "Nom du joueur dans FB"
        }
      },
      "required": [
        "nom",
        "armee"
      ]
    },
    "match": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id du match"
        },
        "tournoi": {
          "type": "string",
          "description": "Nom du tournoi"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date du match"
        },
        "formatPartie": {
          "type": "string",
          "description": "format de la partie"
        },
        "type": {
          "type": "string",
          "description": "type de match"
        },
        "scenario": {
          "type": "string",
          "description": "nom du scenario joue"
        },
        "points": {
          "type": "integer",
          "description": "nombre de points de la partie"
        },
        "powerlevel": {
          "type": "integer",
          "description": "nombre de PL de la partie"
        },
        "derniertour": {
          "type": "integer",
          "description": "numero du dernier tour"
        },
        "joueurentree": {
          "type": "string",
          "description": "nom du joueur qui a entre le match"
        },
        "dateentree": {
          "type": "string",
          "format": "date-time",
          "description": "Date d'entree du match"
        },
        "joueurs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/matchDetailJoueur"
          }
        }
      },
      "required": [
        "date",
        "derniertour",
        "dateentree",
        "joueurentree"
      ]
    },
    "matchDetailJoueur": {
      "type": "object",
      "properties": {
        "nom": {
          "type": "string",
          "description": "Nom du joueur"
        },
        "score": {
          "type": "integer",
          "description": "Score du joueur",
          "minimum": 0,
          "default": 0
        },
        "points": {
          "type": "integer",
          "description": "Nombre de points de l'armée du joueur",
          "minimum": 1
        },
        "armee": {
          "type": "string",
          "description": "Armée du joueur"
        },
        "equipe": {
          "type": "string",
          "description": "Nom de l'équipe du joueur"
        },
        "vainqueur": {
          "type": "boolean",
          "description": "Joueur ayant gagne la partie",
          "default": false
        },
        "briseurdeligne": {
          "type": "boolean",
          "description": "Joueur ayant score briseur de ligne",
          "default": false
        },
        "seigneurdeguerre": {
          "type": "boolean",
          "description": "Joueur ayant score seigneur de guerre",
          "default": false
        },
        "premiersang": {
          "type": "boolean",
          "description": "Joueur ayant score premier sang",
          "default": false
        },
        "tablerase": {
          "type": "boolean",
          "description": "Joueur ayant eliminé l'armee adverse",
          "default": false
        },
        "abandon": {
          "type": "boolean",
          "description": "le joueur a concédé le match",
          "default": false
        }
      },
      "required": [
        "nom",
        "armee",
        "points"
      ]
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    }
  }
}